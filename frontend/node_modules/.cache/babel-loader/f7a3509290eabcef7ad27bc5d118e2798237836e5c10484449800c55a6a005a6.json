{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem1\\\\EDI\\\\vulnscraper-project\\\\frontend\\\\src\\\\Charts.js\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, CategoryScale, LinearScale, BarElement, Tooltip, Legend, LineElement, PointElement } from 'chart.js';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, CategoryScale, LinearScale, BarElement, LineElement, PointElement, Tooltip, Legend);\nexport const SeverityChart = ({\n  vulnerabilities\n}) => {\n  const counts = {\n    Critical: 0,\n    High: 0,\n    Medium: 0,\n    Low: 0\n  };\n  vulnerabilities.forEach(v => {\n    if (counts[v.severity] !== undefined) counts[v.severity]++;\n  });\n  const data = {\n    labels: ['Critical', 'High', 'Medium', 'Low'],\n    datasets: [{\n      label: 'Severity Distribution',\n      data: [counts.Critical, counts.High, counts.Medium, counts.Low],\n      backgroundColor: ['#d9534f', '#f0ad4e', '#f9c851', '#5bc0de'],\n      hoverOffset: 30\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_c = SeverityChart;\nexport const TrendsChart = ({\n  vulnerabilities\n}) => {\n  // Count vulnerabilities grouped by month (last 6 months)\n  const months = [];\n  const counts = [];\n  const map = new Map();\n\n  // Get current date\n  const today = new Date();\n\n  // Initialize counts for last 6 months\n  for (let i = 5; i >= 0; i--) {\n    const d = new Date(today.getFullYear(), today.getMonth() - i, 1);\n    months.push(d.toLocaleString('default', {\n      month: 'short',\n      year: 'numeric'\n    }));\n    map.set(months[months.length - 1], 0);\n  }\n  vulnerabilities.forEach(vuln => {\n    const pub = new Date(vuln.published);\n    const monthYear = pub.toLocaleString('default', {\n      month: 'short',\n      year: 'numeric'\n    });\n    if (map.has(monthYear)) {\n      map.set(monthYear, map.get(monthYear) + 1);\n    }\n  });\n  counts.push(...map.values());\n  const data = {\n    labels: months,\n    datasets: [{\n      label: 'Vulnerabilities Over Time',\n      data: counts,\n      fill: false,\n      borderColor: '#d9534f',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_c2 = TrendsChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"SeverityChart\");\n$RefreshReg$(_c2, \"TrendsChart\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","CategoryScale","LinearScale","BarElement","Tooltip","Legend","LineElement","PointElement","Doughnut","Line","jsxDEV","_jsxDEV","register","SeverityChart","vulnerabilities","counts","Critical","High","Medium","Low","forEach","v","severity","undefined","data","labels","datasets","label","backgroundColor","hoverOffset","fileName","_jsxFileName","lineNumber","columnNumber","_c","TrendsChart","months","map","Map","today","Date","i","d","getFullYear","getMonth","push","toLocaleString","month","year","set","length","vuln","pub","published","monthYear","has","get","values","fill","borderColor","tension","_c2","$RefreshReg$"],"sources":["D:/sem1/EDI/vulnscraper-project/frontend/src/Charts.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  PointElement\r\n} from 'chart.js';\r\nimport { Doughnut, Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  ArcElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const SeverityChart = ({ vulnerabilities }) => {\r\n  const counts = {\r\n    Critical: 0,\r\n    High: 0,\r\n    Medium: 0,\r\n    Low: 0,\r\n  };\r\n  vulnerabilities.forEach(v => {\r\n    if (counts[v.severity] !== undefined) counts[v.severity]++;\r\n  });\r\n\r\n  const data = {\r\n    labels: ['Critical', 'High', 'Medium', 'Low'],\r\n    datasets: [\r\n      {\r\n        label: 'Severity Distribution',\r\n        data: [counts.Critical, counts.High, counts.Medium, counts.Low],\r\n        backgroundColor: ['#d9534f', '#f0ad4e', '#f9c851', '#5bc0de'],\r\n        hoverOffset: 30,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Doughnut data={data} />;\r\n};\r\n\r\nexport const TrendsChart = ({ vulnerabilities }) => {\r\n  // Count vulnerabilities grouped by month (last 6 months)\r\n  const months = [];\r\n  const counts = [];\r\n\r\n  const map = new Map();\r\n\r\n  // Get current date\r\n  const today = new Date();\r\n\r\n  // Initialize counts for last 6 months\r\n  for (let i = 5; i >= 0; i--) {\r\n    const d = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n    months.push(d.toLocaleString('default', { month: 'short', year: 'numeric' }));\r\n    map.set(months[months.length - 1], 0);\r\n  }\r\n\r\n  vulnerabilities.forEach(vuln => {\r\n    const pub = new Date(vuln.published);\r\n    const monthYear = pub.toLocaleString('default', { month: 'short', year: 'numeric' });\r\n    if (map.has(monthYear)) {\r\n      map.set(monthYear, map.get(monthYear) + 1);\r\n    }\r\n  });\r\n\r\n  counts.push(...map.values());\r\n\r\n  const data = {\r\n    labels: months,\r\n    datasets: [\r\n      {\r\n        label: 'Vulnerabilities Over Time',\r\n        data: counts,\r\n        fill: false,\r\n        borderColor: '#d9534f',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Line data={data} />;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem1\\\\EDI\\\\vulnscraper-project\\\\frontend\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwtDecode from 'jwt-decode'; // Use default import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [otp, setOtp] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [showContinue, setShowContinue] = useState(false); // new\n\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSendOTP = async () => {\n    if (!formData.email) {\n      setMessage(\"Please enter your email to send OTP.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/send-otp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: formData.email\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setOtpSent(true);\n        setMessage(\"OTP sent! Please check your email.\");\n      } else {\n        setMessage(data.error || \"Failed to send OTP.\");\n      }\n    } catch {\n      setMessage(\"Error sending OTP. Try again.\");\n    }\n    setLoading(false);\n  };\n  const handleVerifyOTP = async () => {\n    if (!otp) {\n      setMessage(\"Please enter the OTP you received.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/verify-otp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setOtpVerified(true);\n        setMessage(\"OTP verified successfully! Please set your password.\");\n      } else {\n        setMessage(data.error || \"OTP verification failed.\");\n      }\n    } catch {\n      setMessage(\"Error verifying OTP. Try again.\");\n    }\n    setLoading(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!otpVerified) {\n      setMessage(\"Please verify OTP before signing up.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"Signup successful! Redirecting to sign in...\");\n        setTimeout(() => navigate(\"/login\"), 2000);\n      } else {\n        setMessage(data.error || \"Signup failed.\");\n      }\n    } catch {\n      setMessage(\"Error signing up. Try again.\");\n    }\n    setLoading(false);\n  };\n  const handleGoogleSuccess = credentialResponse => {\n    try {\n      const decoded = jwtDecode(credentialResponse.credential);\n      console.log('Google User:', decoded);\n    } catch (e) {}\n    fetch('http://localhost:5000/api/auth/google-signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: credentialResponse.credential\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        if (data.status === 'signup') {\n          setMessage('Signed up with Google!');\n        } else if (data.status === 'signin') {\n          setMessage('Account already exists. Signed in with Google!');\n        }\n        setShowContinue(true); // show button after success\n      } else {\n        setMessage(data.error || 'Google sign up failed.');\n      }\n    }).catch(() => setMessage('Google sign up failed.'));\n  };\n  const handleGoogleError = () => {\n    setMessage('Google sign up failed. Try again.');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* Your styles here (keep your current styles)... */\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-card\",\n        role: \"main\",\n        \"aria-label\": \"Signup form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"alert\",\n          className: \"signup-message\",\n          \"aria-live\": \"polite\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), showContinue && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signup-btn\",\n          style: {\n            marginTop: '10px'\n          },\n          onClick: () => navigate('/dashboard'),\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Signup, \"QjEs6pxbfWbtrxm2BvtwWEn9ZFo=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","formData","setFormData","name","email","password","otp","setOtp","message","setMessage","otpSent","setOtpSent","otpVerified","setOtpVerified","loading","setLoading","showContinue","setShowContinue","navigate","handleChange","e","target","value","handleSendOTP","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","error","handleVerifyOTP","handleSubmit","preventDefault","setTimeout","handleGoogleSuccess","credentialResponse","decoded","credential","console","log","token","then","res","status","catch","handleGoogleError","children","fileName","_jsxFileName","lineNumber","columnNumber","className","role","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["D:/sem1/EDI/vulnscraper-project/frontend/src/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwtDecode from 'jwt-decode'; // Use default import\r\n\r\nconst Signup = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otpVerified, setOtpVerified] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showContinue, setShowContinue] = useState(false); // new\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSendOTP = async () => {\r\n    if (!formData.email) {\r\n      setMessage(\"Please enter your email to send OTP.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/send-otp\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email: formData.email }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok && data.success) {\r\n        setOtpSent(true);\r\n        setMessage(\"OTP sent! Please check your email.\");\r\n      } else {\r\n        setMessage(data.error || \"Failed to send OTP.\");\r\n      }\r\n    } catch {\r\n      setMessage(\"Error sending OTP. Try again.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    if (!otp) {\r\n      setMessage(\"Please enter the OTP you received.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/verify-otp\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email: formData.email, otp }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok && data.success) {\r\n        setOtpVerified(true);\r\n        setMessage(\"OTP verified successfully! Please set your password.\");\r\n      } else {\r\n        setMessage(data.error || \"OTP verification failed.\");\r\n      }\r\n    } catch {\r\n      setMessage(\"Error verifying OTP. Try again.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!otpVerified) {\r\n      setMessage(\"Please verify OTP before signing up.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/signup\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage(\"Signup successful! Redirecting to sign in...\");\r\n        setTimeout(() => navigate(\"/login\"), 2000);\r\n      } else {\r\n        setMessage(data.error || \"Signup failed.\");\r\n      }\r\n    } catch {\r\n      setMessage(\"Error signing up. Try again.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleGoogleSuccess = (credentialResponse) => {\r\n    try {\r\n      const decoded = jwtDecode(credentialResponse.credential);\r\n      console.log('Google User:', decoded);\r\n    } catch (e) {}\r\n\r\n    fetch('http://localhost:5000/api/auth/google-signup', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ token: credentialResponse.credential }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          if (data.status === 'signup') {\r\n            setMessage('Signed up with Google!');\r\n          } else if (data.status === 'signin') {\r\n            setMessage('Account already exists. Signed in with Google!');\r\n          }\r\n          setShowContinue(true); // show button after success\r\n        } else {\r\n          setMessage(data.error || 'Google sign up failed.');\r\n        }\r\n      })\r\n      .catch(() => setMessage('Google sign up failed.'));\r\n  };\r\n\r\n  const handleGoogleError = () => {\r\n    setMessage('Google sign up failed. Try again.');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        /* Your styles here (keep your current styles)... */\r\n      `}</style>\r\n\r\n      <div className=\"signup-page-container\">\r\n        <div className=\"signup-card\" role=\"main\" aria-label=\"Signup form\">\r\n          {/* Your form JSX here (see previous code)... */}\r\n          {/* At the end, after message display */}\r\n          <div role=\"alert\" className=\"signup-message\" aria-live=\"polite\">\r\n            {message}\r\n          </div>\r\n          {showContinue && (\r\n            <button\r\n              className=\"signup-btn\"\r\n              style={{ marginTop: '10px' }}\r\n              onClick={() => navigate('/dashboard')}\r\n            >\r\n              Continue\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}